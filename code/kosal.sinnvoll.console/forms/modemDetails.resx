<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxModemIcon.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        MLw1d7He5P6UpPjKXWzbgAAAAAAAAAAAP//Z
</value>
  </data>
</root>